{"id":632950538,"question_id":404,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 5 months","timestamp":1643805552,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/632950538/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"44.5 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nfunction dfs(root, leftArray) {\n  if (!root) {\n    return;\n  }\n\n  dfs(root.left, leftArray);\n  dfs(root.right, leftArray);\n\n  if (root.left && (!root.left.left && !root.left.right)) {\n    leftArray.push(root.left.val);\n  }\n}\nfunction sumOfLeftLeaves(root) {\n  let leftArray = [];\n  dfs(root, leftArray);\n\n  let sum = 0;\n  for (let num of leftArray) {\n    sum += num;\n  }\n\n  return sum;\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"flag_type":1}