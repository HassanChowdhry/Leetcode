{"id":675249366,"question_id":160,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 3 months","timestamp":1649275096,"status":10,"status_display":"Accepted","runtime":"135 ms","url":"/submissions/detail/675249366/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"50.3 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n\n/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */\nvar getIntersectionNode = function(headA, headB) {\n   let lengthA = 0;\n  let lengthB = 0;\n\n  let hA = headA;\n  let hB = headB;\n\n  while (hA) {\n    lengthA++;\n    hA = hA.next;\n  }\n  \n  while (hB) {\n    lengthB++;\n    hB = hB.next;\n  }\n\n  hA = headA;\n  hB = headB;\n\n  let diff = Math.abs(lengthA - lengthB);\n\n  if (lengthA > lengthB) {\n    while (diff > 0) {\n      hA = hA.next;\n      diff--;\n    }\n  \n  } else {\n    while (diff > 0) {\n      hB = hB.next;\n      diff--;\n    }\n  }\n\n  while (hA !== hB) {\n    hA = hA.next;\n    hB = hB.next;\n    \n    if (hA == null || hB == null) {\n      return null;\n    }\n  }\n\n  return hA;\n}\n","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false,"flag_type":1}