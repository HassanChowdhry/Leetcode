{"id":761789974,"question_id":215,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 11 months","timestamp":1659300236,"status":10,"status_display":"Accepted","runtime":"107 ms","url":"/submissions/detail/761789974/","is_pending":"Not Pending","title":"Kth Largest Element in an Array","memory":"48.7 MB","code":"var findKthLargest = function(nums, k) {\n    // the final position of the kth largest number in a sorted array\n    const finalIdx = nums.length - k;\n    let left = 0;\n    let right = nums.length-1;\n    \n    while(left <= right) {\n        // random num between left and right\n        const pivot = Math.floor(Math.random() * (right - left + 1)) + left;\n        // the final position of the pivot in a sorted array        \n        const pivotIdx = pivotHelper(pivot, left, right);\n        // the target number is in its correct postion, thus return\n        if(pivotIdx === finalIdx) return nums[finalIdx];\n        \n        // if pivotIdx is smaller we undershot, so look only on the right half\n        if(pivotIdx < finalIdx) left = pivotIdx + 1;\n        // else we overshot, so look only on the left half\n        else right = pivotIdx - 1;\n    }\n    \n    function pivotHelper(pivot, start, end) {\n        // move the pivot to the end (get it out of the way)\n        swap(pivot, end);\n        \n        let i = start;\n        let j = start;\n        \n        // move smaller nums to the begining of the array\n        while(j < end) {\n            if(nums[j] <= nums[end]) {\n                swap(i, j);\n                i++;\n            } \n            j++;\n        }\n        // swap pivot to its final position\n        swap(i, end);\n        return i;\n    }\n    \n    function swap(i, j) {\n        [nums[i], nums[j]] = [nums[j], nums[i]];\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"kth-largest-element-in-an-array","has_notes":false,"flag_type":1}