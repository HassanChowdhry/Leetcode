{"id":1302299952,"question_id":76,"lang":"python3","lang_name":"Python3","time":"2Â weeks, 6Â days","timestamp":1719515730,"status":10,"status_display":"Accepted","runtime":"631 ms","url":"/submissions/detail/1302299952/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"17 MB","code":"from collections import defaultdict\nclass Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        if len(t) > len(s): return \"\"\n        l, r = 0, 0\n        min_sub = len(s)+1\n        ml = mr = -1\n        target, curr = Counter(t), defaultdict(int)\n\n        def isSubstring():\n            if len(curr) < len(target): return False\n            for key in target:\n                if target[key] > curr[key]: return False\n            return True\n        \n        while r < len(s):\n            if s[r] not in target:\n                r+=1\n                continue\n            curr[s[r]] += 1\n            while isSubstring() and l <= r:\n                if s[l] in curr:\n                    curr[s[l]] -= 1\n                    if curr[s[l]] < target[s[l]]:\n                        curr[s[l]]+=1\n                        if r-l+1 <= min_sub:\n                            min_sub = r-l+1\n                            mr = r\n                            ml = l\n                        break\n                l+=1\n            r+=1\n\n        return \"\" if min_sub == len(s)+1 else s[ml:mr+1]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}