{"id":1276698480,"question_id":744,"lang":"python3","lang_name":"Python3","time":"1 month, 2 weeks","timestamp":1717440956,"status":10,"status_display":"Accepted","runtime":"389 ms","url":"/submissions/detail/1276698480/","is_pending":"Not Pending","title":"Network Delay Time","memory":"18.6 MB","code":"from collections import defaultdict\nfrom heapq import heapify, heappush, heappop\nclass Solution:\n    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -> int:\n        minheap = []\n        seen = set()\n        edges = defaultdict(list)\n\n        for s, e, c in times:\n            edges[s].append((e, c))\n\n        heapify(minheap)\n        heappush(minheap, (0, k))\n\n        total = 0\n        while minheap:\n            cost, start = heappop(minheap)\n            if start in seen:\n                continue\n            seen.add(start)\n            total = max(total, cost)\n            for e, c in edges[start]:\n                heappush(minheap, (cost+c, e))\n        return total if len(seen)==n else -1","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"network-delay-time","has_notes":false,"flag_type":1}