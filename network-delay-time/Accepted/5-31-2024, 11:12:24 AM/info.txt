{"id":1273535670,"question_id":744,"lang":"python3","lang_name":"Python3","time":"1 month, 2 weeks","timestamp":1717179144,"status":10,"status_display":"Accepted","runtime":"383 ms","url":"/submissions/detail/1273535670/","is_pending":"Not Pending","title":"Network Delay Time","memory":"18.5 MB","code":"from collections import defaultdict\nfrom heapq import heapify, heappop, heappush\nclass Solution:\n    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -> int:\n        minheap, seen = [], set()\n        adj_list = defaultdict(list)\n        for s, e, c in times: adj_list[s].append((e, c))\n        heapify(minheap)\n        heappush(minheap, (0, k))\n\n        total = 0\n        while minheap:\n            cost, node = heappop(minheap)\n            if node in seen: continue\n            seen.add(node)\n            total = max(total, cost)\n\n            for nxt, c in adj_list[node]:\n                heappush(minheap, (c+cost, nxt))\n\n            del adj_list[node]\n        \n        return total if len(seen)==n else -1\n","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"network-delay-time","has_notes":false,"flag_type":1}