{"id":1276691192,"question_id":803,"lang":"python3","lang_name":"Python3","time":"1 month, 2 weeks","timestamp":1717440453,"status":10,"status_display":"Accepted","runtime":"177 ms","url":"/submissions/detail/1276691192/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"17.6 MB","code":"from heapq import heapify, heappop, heappush\nfrom collections import defaultdict\nclass Solution:\n    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:\n        # edge list\n        edges = defaultdict(list)\n        prices = [float(\"inf\")] * n\n        prices[src] = 0\n\n        for i in range(k+1):\n            tmp = prices[::]\n            for s, e, c in flights:\n                if prices[s] == float(\"inf\"): continue\n                if prices[s]+c < tmp[e]:\n                    tmp[e] = prices[s]+c\n            prices = tmp\n\n        \n        return prices[dst] if prices[dst]!=float(\"inf\") else -1\n\n","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}