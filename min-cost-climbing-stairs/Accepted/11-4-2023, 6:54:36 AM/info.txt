{"id":1091300208,"question_id":747,"lang":"python3","lang_name":"Python3","time":"8 months, 2 weeks","timestamp":1699106076,"status":10,"status_display":"Accepted","runtime":"69 ms","url":"/submissions/detail/1091300208/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"17.5 MB","code":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n      return min(self.helper(cost, len(cost) - 1, {}), self.helper(cost, len(cost)-2, {}))\n    \n    def helper(self, cost, last, memo):\n      if last == 0 or last == 1:\n        return cost[last]\n      \n      if last in memo:\n        return memo[last]\n      \n      res = cost[last] + min(self.helper(cost, last-1, memo), self.helper(cost, last-2, memo))\n\n      memo[last] = res\n\n      return res","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}