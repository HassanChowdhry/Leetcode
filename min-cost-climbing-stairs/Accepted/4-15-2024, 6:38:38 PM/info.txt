{"id":1233531408,"question_id":747,"lang":"python3","lang_name":"Python3","time":"3Â months","timestamp":1713231518,"status":10,"status_display":"Accepted","runtime":"69 ms","url":"/submissions/detail/1233531408/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"19.7 MB","code":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        memo={}\n        n = len(cost)\n\n        @cache\n        def backtrack(i):\n            if i < 0:\n                return 0\n            if i == 0 or i == 1:\n                return cost[i]\n            if i in memo:\n                return memo[i]\n            \n            res = cost[i] + min(backtrack(i-1), backtrack(i-2))\n            memo[i] = res\n            return res\n        \n        return min(backtrack(n-1), backtrack(n-2))","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}