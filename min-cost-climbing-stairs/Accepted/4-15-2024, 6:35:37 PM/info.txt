{"id":1233529967,"question_id":747,"lang":"python3","lang_name":"Python3","time":"3Â months","timestamp":1713231337,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/1233529967/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"19.6 MB","code":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        memo={}\n        @cache\n        def backtrack(i):\n            if i >= len(cost):\n                return 0\n            if i in memo:\n                return memo[i]\n            \n            res = cost[i] + min(backtrack(i+1), backtrack(i+2))\n            memo[i] = res\n            return res\n        \n        return min(backtrack(1), backtrack(0))","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}