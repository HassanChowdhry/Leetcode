{"id":630933852,"question_id":226,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 5 months","timestamp":1643550053,"status":10,"status_display":"Accepted","runtime":"97 ms","url":"/submissions/detail/630933852/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"42.4 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nvar invertTree = function(root) {\n    if (!root || (!root.left && !root.right)) {\n    return root;\n  }\n\n  let temp = root.left;\n  root.left = invertTree(root.right);\n  root.right = invertTree(temp);\n\n  return root;\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}