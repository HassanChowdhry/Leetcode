{"id":685712576,"question_id":1427,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 2 months","timestamp":1650677912,"status":10,"status_display":"Accepted","runtime":"191 ms","url":"/submissions/detail/685712576/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"59.8 MB","code":"/**\n * \n * @param {*} root1 \n * @param {*} array \n */\nfunction dfs1(root1, array) {\n  if (!root1) {\n    return root1;\n  } \n\n  dfs1(root1.left, array);\n  array.push(root1.val);\n  dfs1(root1.right, array);\n\n  return array;\n}\n\n/**\n * \n * @param {*} root1 \n * @param {*} array \n */\nfunction dfs2(root2, array) {\n  if (!root2) {\n    return root2;\n  } \n\n  dfs2(root2.left, array);\n  array.push(root2.val);\n  dfs2(root2.right, array);\n\n  return array;\n}\n\n/**\n * @param {TreeNode} root1\n * @param {TreeNode} root2\n * @return {number[]}\n */\nfunction getAllElements(root1, root2) {\n  let array = [];\n  dfs1(root1, array);\n  dfs2(root2, array);\n  return array.sort((a, b) => a - b);\n}\n","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"all-elements-in-two-binary-search-trees","has_notes":false,"flag_type":1}