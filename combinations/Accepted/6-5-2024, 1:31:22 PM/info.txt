{"id":1278852889,"question_id":77,"lang":"python3","lang_name":"Python3","time":"1Â month, 1Â week","timestamp":1717619482,"status":10,"status_display":"Accepted","runtime":"798 ms","url":"/submissions/detail/1278852889/","is_pending":"Not Pending","title":"Combinations","memory":"64.7 MB","code":"class Solution:\n    def combine(self, n: int, k: int) -> List[List[int]]:\n        res = []\n        def backtrack(inner, i):\n            if len(inner) == k:\n                res.append(inner[::])\n            \n\n            for j in range(i+1, n+1):\n                inner.append(j)\n                backtrack(inner, j)\n                inner.pop()\n        \n        backtrack([], 0)\n        return res","compare_result":"111111111111111111111111111","title_slug":"combinations","has_notes":false,"flag_type":1}