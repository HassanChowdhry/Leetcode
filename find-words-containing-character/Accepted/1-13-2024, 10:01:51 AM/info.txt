{"id":1145251899,"question_id":3194,"lang":"c","lang_name":"C","time":"6 months, 1 week","timestamp":1705168911,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/1145251899/","is_pending":"Not Pending","title":"Find Words Containing Character","memory":"8.1 MB","code":"/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* findWordsContaining(char** words, int wordsSize, char x, int* returnSize) {\n    int* res = (int*) malloc(wordsSize * sizeof(int));\n    int currSize = 0;\n\n    for (int i = 0; i < wordsSize; ++i) {\n        for (int j = 0; j < strlen(words[i]); ++j) {\n            if (words[i][j] == x) {\n                res[currSize] = i;\n                currSize++;\n                break;\n            }\n        }\n    }\n\n    *returnSize = currSize;\n    return res;\n}","compare_resulttitle_slug":"find-words-containing-character","has_notes":false,"flag_type":1}