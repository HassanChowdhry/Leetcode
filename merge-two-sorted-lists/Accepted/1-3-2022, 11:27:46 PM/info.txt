{"id":612735847,"question_id":21,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 6 months","timestamp":1641281266,"status":10,"status_display":"Accepted","runtime":"147 ms","url":"/submissions/detail/612735847/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"41 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} list1\n * @param {ListNode} list2\n * @return {ListNode}\n */\nvar mergeTwoLists = function(list1, list2) {\n    let queue = [];\n  let head1 = list1;\n  let head2 = list2;\n\n  let emptyCase = list1;\n\n  while (head1 != null || head2 != null) {\n\n    if (head1 == null) {\n      queue.push(head2.val);\n      head2 = head2.next;\n\n    } else if (head2 == null) {\n      queue.push(head1.val);\n      head1 = head1.next;\n\n    } else if (head1.val < head2.val) {\n      while (head1 != null && head1.val <= head2.val) {\n        queue.push(head1.val);\n        head1 = head1.next;\n\n      }\n      queue.push(head2.val);\n      head2 = head2.next;\n\n    } else if (head1.val >= head2.val) {\n      while (head2 != null && head2.val <= head1.val) {\n        queue.push(head2.val);\n        head2 = head2.next;\n      }\n      queue.push(head1.val);\n      head1 = head1.next;\n\n    }\n  }\n  if (queue.length === 0) {\n    return emptyCase;\n  }\n\n  let newHead = new ListNode(queue.shift(), null);\n  let prev = newHead;\n  let current = null;\n\n  while (queue.length > 0) {\n    current = new ListNode(queue.shift(), null);\n    prev.next = current;\n    prev = prev.next;\n  }\n\n  return newHead;\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}