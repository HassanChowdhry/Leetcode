{"id":634446086,"question_id":1463,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 5 months","timestamp":1643991842,"status":10,"status_display":"Accepted","runtime":"89 ms","url":"/submissions/detail/634446086/","is_pending":"Not Pending","title":"The K Weakest Rows in a Matrix","memory":"44.5 MB","code":"/**\n * @param {number[][]} mat\n * @param {number} k\n * @return {number[]}\n */\nvar kWeakestRows = function(mat, k) {\n    let result = [];\n\n  for (let i = 0; i < mat.length; i++) {\n    let sum = 0;\n    for (let j = 0; j < mat[0].length; j++) {\n      sum += mat[i][j];\n    }\n    result.push([i, sum]);\n  }\nresult = result\n  .sort((a, b) => (a[1] === b[1] ? a[0] - b[0] : a[1] - b[1]))\n  .slice(0, k)\n  .map((item) => item[0]);\n\n  return result;\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"the-k-weakest-rows-in-a-matrix","has_notes":false,"flag_type":1}