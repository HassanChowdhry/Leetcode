{"id":623021563,"question_id":975,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 6 months","timestamp":1642570655,"status":10,"status_display":"Accepted","runtime":"313 ms","url":"/submissions/detail/623021563/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"92.8 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} low\n * @param {number} high\n * @return {number}\n */\nfunction helper(currentRoot, low, high, sum) {\n  if (!currentRoot) {\n    return sum;\n  }\n  if (currentRoot.val >= low && currentRoot.val <= high) {\n    sum += currentRoot.val;\n  }\n  return sum + helper(currentRoot.left, low, high, 0) + helper(currentRoot.right, low, high, 0); \n}\n\nfunction rangeSumBST(root, low, high) {\n  return helper(root, low, high, 0);\n}\n","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst","has_notes":false,"flag_type":1}