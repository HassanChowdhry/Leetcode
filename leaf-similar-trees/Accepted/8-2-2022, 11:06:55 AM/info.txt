{"id":763469835,"question_id":904,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 11 months","timestamp":1659463615,"status":10,"status_display":"Accepted","runtime":"89 ms","url":"/submissions/detail/763469835/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"44.5 MB","code":"/**\n * \n * @param {TreeNode} root \n * @return {Number[]}\n */\nfunction dfsPost(root, leafs) {\n  if (!root) {\n    return root;\n  }\n\n  dfsPost(root.left, leafs);\n  dfsPost(root.right, leafs);\n  if (!root.left && !root.right) {\n    leafs.push(root.val);\n  }\n\n}\n\n/**\n * @param {TreeNode} root1\n * @param {TreeNode} root2\n * @return {boolean}\n */\nfunction leafSimilar(root1, root2) {\n  let leafs1 = [];\n  let leafs2 = [];\n\n  dfsPost(root1, leafs1);\n  dfsPost(root2, leafs2);\n\n  if (leafs1.length !== leafs2.length) return false;\n\n  for (let i = 0; i < leafs1.length; i++) {\n    if (leafs1[i] !== leafs2[i]) return false;\n  }\n\n  return true;\n}","compare_result":"1111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false,"flag_type":1}