{"id":763471106,"question_id":904,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 11 months","timestamp":1659463697,"status":10,"status_display":"Accepted","runtime":"97 ms","url":"/submissions/detail/763471106/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"44.6 MB","code":"const getLeafs = (root) => {\n    if (!root) return [];\n    \n    const stack = [root], result = []\n    while(stack.length) {\n        const curr = stack.pop()\n        if (!curr.left && !curr.right) result.push(curr.val)\n\n        if (curr.left) stack.push(curr.left)\n        if (curr.right) stack.push(curr.right)\n    }\n\n    return result\n};\n\nconst leafSimilar = (root1, root2) => {\n    if (!root1 || !root2) return false\n\n    const root1Leafs = getLeafs(root1), root2Leafs = getLeafs(root2)\n\n    if (root1Leafs.length !== root2Leafs.length) return false\n    \n    for(let i = 0; i < root1Leafs.length; i++) {\n        if (root1Leafs[i] !== root2Leafs[i]) return false\n    }\n    \n    return true\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false,"flag_type":1}