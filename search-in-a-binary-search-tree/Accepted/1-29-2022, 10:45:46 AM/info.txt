{"id":630360851,"question_id":783,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 5 months","timestamp":1643481946,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/630360851/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"49.8 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} val\n * @return {TreeNode}\n */\nvar searchBST = function(root, val) {\n    let queue = []; \n  queue.push(root);\n\n  while (queue.length > 0) {\n    let size = queue.length;\n\n    for (let i = 0; i < size; i++) {\n      let node = queue.shift();\n\n      if (node.left) {\n        queue.push(node.left);\n      }\n      \n      if (node.right) {\n        queue.push(node.right);\n      }\n\n      if (node.val === val) {\n        return node;\n      }\n    }\n  }\n\n  return null;\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}