{"id":1264472638,"question_id":131,"lang":"python3","lang_name":"Python3","time":"1 month, 3 weeks","timestamp":1716343045,"status":10,"status_display":"Accepted","runtime":"467 ms","url":"/submissions/detail/1264472638/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"35.2 MB","code":"class Solution:\n    def partition(self, s: str) -> List[List[str]]:\n        res = []\n        part = []\n\n        def isPalindrome(text):\n            return text == text[::-1]\n\n        def backtrack(idx):\n            if idx >= len(s):\n                res.append(part.copy())\n                return\n            \n            for i in range(idx, len(s)):\n                sub = s[idx:i+1]\n                if isPalindrome(sub):  \n                    part.append(sub)\n                    backtrack(i+1)\n                    part.pop()\n\n        backtrack(0)\n        return res\n        ","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false,"flag_type":1}