{"id":1262455961,"question_id":152,"lang":"python3","lang_name":"Python3","time":"2Â months","timestamp":1716142086,"status":10,"status_display":"Accepted","runtime":"87 ms","url":"/submissions/detail/1262455961/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"19.9 MB","code":"class Solution:\n    def maxProduct(self, nums: List[int]) -> int:   \n        min_num = nums[0]\n        max_num = nums[0]\n        res = [[min_num, max_num]]\n        product = max_num\n\n        for num in nums[1::]:\n            min_num = min(num, num*res[-1][0], num*res[-1][1])\n            max_num = max(num, num*res[-1][0], num*res[-1][1])\n            res.append([min_num, max_num])\n\n            product = max(product, max_num)\n        \n        print(res)\n        return product","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray","has_notes":false,"flag_type":1}