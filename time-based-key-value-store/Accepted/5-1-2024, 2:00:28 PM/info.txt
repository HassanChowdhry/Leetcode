{"id":1246877021,"question_id":1023,"lang":"python3","lang_name":"Python3","time":"2 months, 2 weeks","timestamp":1714597228,"status":10,"status_display":"Accepted","runtime":"505 ms","url":"/submissions/detail/1246877021/","is_pending":"Not Pending","title":"Time Based Key-Value Store","memory":"80.7 MB","code":"class TimeMap:\n\n    def __init__(self):\n        self.map = {} # (key, time) : value\n        self.key_stamp = {} # key: [time]\n\n    def set(self, key: str, value: str, timestamp: int) -> None:\n        self.map[(key, timestamp)] = value\n        \n        if key in self.key_stamp:\n            self.key_stamp[key].append(timestamp)\n        else:\n            self.key_stamp[key] = [timestamp]\n\n\n    def get(self, key: str, timestamp: int) -> str:\n        if (key, timestamp) in self.map:\n            return self.map[(key, timestamp)]\n        \n        if key not in self.key_stamp:\n            return \"\"\n        stamps = self.key_stamp[key]\n\n        l = 0\n        r = len(stamps)-1\n        if stamps[r] < timestamp:\n            return self.map[(key, stamps[r])]\n        elif stamps[0] > timestamp:\n            return \"\"\n\n        while l <= r:\n            if l==r:\n                return self.map[(key, stamps[l])]\n            \n            mid = ceil((l+r)/2)\n\n            if stamps[mid] == timestamp:\n                return self.map[(key, stamps[mid])]\n            elif stamps[mid] < timestamp:\n                l = mid\n            elif stamps[mid] > timestamp:\n                r = mid-1\n\n        \n        return \"\"\n\n# Your TimeMap object will be instantiated and called as such:\n# obj = TimeMap()\n# obj.set(key,value,timestamp)\n# param_2 = obj.get(key,timestamp)","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"time-based-key-value-store","has_notes":false,"flag_type":1}