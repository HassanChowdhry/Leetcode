{"id":1315934020,"question_id":124,"lang":"python3","lang_name":"Python3","time":"1 week, 1 day","timestamp":1720587165,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/1315934020/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"20.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxPathSum(self, node: Optional[TreeNode]) -> int:\n        res = [float(\"-inf\")]\n        def dfs(root):\n            if not root:\n                return 0\n\n            left = max(dfs(root.left), 0)\n            right = max(dfs(root.right), 0)\n            \n            curr =  root.val + left + right\n            res[0] = max(res[0], curr)     \n                  \n            return max(root.val + left, root.val + right)\n        dfs(node)\n        return res[0]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}