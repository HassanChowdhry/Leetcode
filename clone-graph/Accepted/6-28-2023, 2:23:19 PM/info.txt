{"id":981906787,"question_id":133,"lang":"python3","lang_name":"Python3","time":"1Â year","timestamp":1687987399,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/981906787/","is_pending":"Not Pending","title":"Clone Graph","memory":"16.8 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val = 0, neighbors = None):\n        self.val = val\n        self.neighbors = neighbors if neighbors is not None else []\n\"\"\"\n\nclass Solution:\n    def cloneGraph(self, node: 'Node') -> 'Node':\n      if not node:\n        return None\n      \n      visited = {}\n      return self.dfs(node, visited)\n    \n    def dfs(self, node: 'Node', visited: set):\n      if node in visited:\n        return visited[node]\n      \n      clone = Node(node.val)\n      visited[node] = clone\n      \n      for edge in node.neighbors:\n        clone.neighbors.append(self.dfs(edge, visited))\n          \n      return clone","compare_result":"1111111111111111111111","title_slug":"clone-graph","has_notes":false,"flag_type":1}