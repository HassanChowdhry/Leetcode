{"id":1271625908,"question_id":1250,"lang":"python3","lang_name":"Python3","time":"1 month, 2 weeks","timestamp":1717002668,"status":10,"status_display":"Accepted","runtime":"1253 ms","url":"/submissions/detail/1271625908/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"51.9 MB","code":"class Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        n, m = len(text1), len(text2)\n        dp = [[0]*m for _ in range(n)]\n        \n        for i in range(n):\n            for j in range(m):\n                if text1[i]==text2[j]:\n                    if i-1 not in range(n) or j-1 not in range(m):\n                        dp[i][j] = 1\n                    else:\n                        dp[i][j] = dp[i-1][j-1]+1\n                else:\n                    if i-1 not in range(n):\n                        dp[i][j] = dp[i][j-1]\n                    elif j-1 not in range(m):\n                        dp[i][j] = dp[i-1][j]\n                    else:\n                        dp[i][j] = max(dp[i-1][j], dp[i][j-1])\n\n        print(dp)  \n        return dp[-1][-1]","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}