{"id":1301251577,"question_id":817,"lang":"python3","lang_name":"Python3","time":"3Â weeks","timestamp":1719429707,"status":10,"status_display":"Accepted","runtime":"233 ms","url":"/submissions/detail/1301251577/","is_pending":"Not Pending","title":"Design HashMap","memory":"21.8 MB","code":"class ListNode:\n    def __init__(self, key=-1, val=-1, next=None):\n        self.key = key\n        self.val = val\n        self.next = next\n\nclass MyHashMap:\n\n    def __init__(self):\n        self.map = [ListNode() for _ in range(10000)]\n\n    def put(self, key: int, value: int) -> None:\n        idx = key % len(self.map)\n\n        node = self.map[idx]\n        while node.next:\n            if node.next.key == key:\n                node.next.val = value\n                return\n            node = node.next\n        new_node = ListNode(key, value)\n        node.next = new_node\n\n    def get(self, key: int) -> int:\n        idx = key % len(self.map)\n        node = self.map[idx].next\n\n        while node:\n            if node.key == key:\n                return node.val\n            node = node.next\n        \n        return -1\n\n    def remove(self, key: int) -> None:\n        idx = key % len(self.map)\n\n        node = self.map[idx]\n        while node and node.next:\n            if node.next.key == key:\n                node.next = node.next.next\n                return\n            node = node.next\n\n\n# Your MyHashMap object will be instantiated and called as such:\n# obj = MyHashMap()\n# obj.put(key,value)\n# param_2 = obj.get(key)\n# obj.remove(key)","compare_result":"1111111111111111111111111111111111111","title_slug":"design-hashmap","has_notes":false,"flag_type":1}