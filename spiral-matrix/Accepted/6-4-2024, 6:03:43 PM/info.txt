{"id":1277951785,"question_id":54,"lang":"python3","lang_name":"Python3","time":"1 month, 1 week","timestamp":1717549423,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/1277951785/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"16.6 MB","code":"class Solution:\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        \n        visit = set()\n        N, M = len(matrix), len(matrix[0])\n        \n        def bfs(i, j, state):\n            if len(res) == N*M:\n                return\n            if i not in range(N) or j not in range(M) or (i,j) in visit:\n                if state == 'r':\n                    bfs(i+1, j-1, 'd')\n                elif state == 'l':\n                    bfs(i-1, j+1, 'u')\n                elif state == 'd':\n                    bfs(i-1, j-1, 'l')\n                elif state == 'u':\n                    bfs(i+1, j+1, 'r')\n                return\n            visit.add((i, j))\n            res.append(matrix[i][j])\n            if state == 'r':\n                bfs(i, j+1, state)\n            elif state == 'l':\n                bfs(i, j-1, state)\n            elif state == 'd':\n                bfs(i+1, j, state)\n            elif state == 'u':\n                bfs(i-1, j, state)\n            return\n            \n        res = []\n        bfs(0, 0, 'r')\n        return res","compare_result":"1111111111111111111111111","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}