{"id":1236770988,"question_id":883,"lang":"python3","lang_name":"Python3","time":"3Â months","timestamp":1713549592,"status":10,"status_display":"Accepted","runtime":"662 ms","url":"/submissions/detail/1236770988/","is_pending":"Not Pending","title":"Car Fleet","memory":"39.9 MB","code":"class Solution:\n    def carFleet(self, target: int, positions: List[int], speed: List[int]) -> int:\n        cars = len(positions)\n        if cars == 1: return 1\n\n        cars = [(positions[i], speed[i]) for i in range(cars)]\n\n        pairs = sorted(cars, key=lambda x: x[0], reverse=True)\n        stack = []\n\n        for pos, sp in pairs:\n            stack.append((target-pos) / sp)\n            if len(stack) >= 2 and stack[-1] <= stack[-2]:\n                stack.pop()\n\n        return len(stack)","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"car-fleet","has_notes":false,"flag_type":1}