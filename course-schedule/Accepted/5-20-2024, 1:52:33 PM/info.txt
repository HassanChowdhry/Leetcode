{"id":1263440504,"question_id":207,"lang":"python3","lang_name":"Python3","time":"1 month, 4 weeks","timestamp":1716238353,"status":10,"status_display":"Accepted","runtime":"81 ms","url":"/submissions/detail/1263440504/","is_pending":"Not Pending","title":"Course Schedule","memory":"18.7 MB","code":"class Solution:\n    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:\n      # inits maps\n      courses = {i:[] for i in range(numCourses)}\n      isNotLoop = True\n      \n      for pre, course in prerequisites:\n        courses[pre].append(course)\n      \n      def dfs(pre, visited):\n        isNotLooped = True\n        if len(courses[pre]) == 0:\n          return True\n        \n        if pre in visited:\n          return False\n        \n        visited.add(pre)\n        for course in courses[pre]:\n          isNotLooped &= dfs(course, visited)\n          courses[course] = []\n        \n          \n        return isNotLooped\n      \n      # main process\n      for pre in courses:\n        visited = set()\n        isNotLoop &= dfs(pre, visited)\n        \n      # end\n      return isNotLoop","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"course-schedule","has_notes":false,"flag_type":1}