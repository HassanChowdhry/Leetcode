{"id":1281284975,"question_id":23,"lang":"python3","lang_name":"Python3","time":"1 month, 1 week","timestamp":1717831953,"status":10,"status_display":"Accepted","runtime":"63 ms","url":"/submissions/detail/1281284975/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"19.9 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nfrom heapq import heapify, heappop, heappush\nclass Solution:\n    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:\n        minheap = []\n        heapify(minheap)\n\n        for head in lists:\n            curr = head\n            while curr:\n                heappush(minheap, curr.val)\n                curr = curr.next\n\n        if not minheap:\n            return None\n        head = ListNode(heappop(minheap))\n        curr = head\n        while minheap:\n            nxt = ListNode(heappop(minheap))\n            curr.next = nxt\n            curr = nxt\n        \n        return head","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false,"flag_type":1}