{"id":1303419863,"question_id":791,"lang":"python3","lang_name":"Python3","time":"2 weeks, 5 days","timestamp":1719621351,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/1303419863/","is_pending":"Not Pending","title":"Split BST","memory":"16.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def splitBST(self, root: Optional[TreeNode], target: int) -> List[Optional[TreeNode]]:\n        \n        def dfs(curr):\n            if not curr:\n                return [None, None]\n            \n            if curr.val > target:\n                left = dfs(curr.left)\n                curr.left = left[1]\n                return [left[0], curr]\n            \n            else:\n                right = dfs(curr.right)\n                curr.right = right[0]\n                return [curr, right[1]]\n\n        return dfs(root)\n","compare_result":"111111111111111111111111111111111111111","title_slug":"split-bst","has_notes":false,"flag_type":1}