{"id":1264539758,"question_id":876,"lang":"python3","lang_name":"Python3","time":"1 month, 3 weeks","timestamp":1716350812,"status":10,"status_display":"Accepted","runtime":"161 ms","url":"/submissions/detail/1264539758/","is_pending":"Not Pending","title":"Hand of Straights","memory":"18.6 MB","code":"from heapq import heapify, heappush, heappop\nclass Solution:\n    def isNStraightHand(self, hand: List[int], groupSize: int) -> bool:\n        split = len(hand)//groupSize\n        if groupSize == 1:\n            return True\n        if len(hand)%groupSize:\n            return False\n        \n        frq = Counter(hand)\n        minheap = list(frq.keys())\n        heapify(minheap)\n\n        while minheap:\n            first = minheap[0]\n\n            for i in range(first, first+groupSize):\n                if i not in frq:\n                    return False\n                frq[i] -=1 \n                if frq[i]==0:\n                    if i != minheap[0]:\n                        return False\n                    heappop(minheap)\n        return True","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"hand-of-straights","has_notes":false,"flag_type":1}