{"id":1264528042,"question_id":876,"lang":"python3","lang_name":"Python3","time":"1 month, 3 weeks","timestamp":1716349647,"status":10,"status_display":"Accepted","runtime":"2537 ms","url":"/submissions/detail/1264528042/","is_pending":"Not Pending","title":"Hand of Straights","memory":"18.4 MB","code":"class Solution:\n    def isNStraightHand(self, hand: List[int], groupSize: int) -> bool:\n        split = len(hand)//groupSize\n        if groupSize == 1:\n            return True\n        if len(hand)/groupSize != split:\n            return False\n        \n        # set up - Sort values, visit set \n        hand.sort()\n        visit = set()\n        res = []\n        \n        # logic - iterate untill you can populate subgroup keep count\n        for i in range(split):\n            sub = []\n            for pos, card in enumerate(hand):\n                if len(sub)==groupSize:\n                    break\n                if pos in visit:\n                    continue\n                if sub and sub[-1]==card:\n                    continue\n                \n                visit.add(pos)\n                if not sub:\n                    sub.append(card)\n                    continue\n\n                if sub[-1]+1 != card:\n                    return False\n                sub.append(card)\n\n            if len(sub) != groupSize:\n                return False\n\n        return True","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"hand-of-straights","has_notes":false,"flag_type":1}