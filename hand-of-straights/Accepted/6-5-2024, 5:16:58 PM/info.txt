{"id":1278952083,"question_id":876,"lang":"python3","lang_name":"Python3","time":"1 month, 1 week","timestamp":1717633018,"status":10,"status_display":"Accepted","runtime":"165 ms","url":"/submissions/detail/1278952083/","is_pending":"Not Pending","title":"Hand of Straights","memory":"18.5 MB","code":"from heapq import heapify, heappush, heappop\nclass Solution:\n    def isNStraightHand(self, hand: List[int], groupSize: int) -> bool:\n        N = len(hand)\n        if groupSize == 1:\n            return True\n        if N % groupSize:\n            return False\n        \n        frq = Counter(hand)\n        minheap = list(frq.keys())\n        heapify(minheap)\n\n        while minheap:\n            peek = minheap[0]\n\n            for i in range(peek, peek+groupSize):\n                if i not in frq:\n                    return False\n                frq[i]-=1\n                if frq[i] == 0:\n                    del frq[i]\n                    if i == minheap[0]:\n                        heappop(minheap)\n        \n        return True","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"hand-of-straights","has_notes":false,"flag_type":1}