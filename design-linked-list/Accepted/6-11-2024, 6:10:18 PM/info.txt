{"id":1285424480,"question_id":838,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1718154618,"status":10,"status_display":"Accepted","runtime":"91 ms","url":"/submissions/detail/1285424480/","is_pending":"Not Pending","title":"Design Linked List","memory":"17.9 MB","code":"class Node:\n    def __init__(self, val, nxt=None, prev=None):\n        self.val = val\n        self.next = nxt\n        self.prev = prev\n\nclass MyLinkedList:\n\n    def __init__(self):\n        self.head = None\n        self.tail = None\n        self.len = 0\n\n    def get(self, index: int) -> int:\n        curr, end = self.head, self.tail\n        if not curr or index >= self.len:\n            return -1\n\n        for i in range(index):\n            curr = curr.next\n        \n        return curr.val\n        \n\n    def addAtHead(self, val: int) -> None:\n        self.len += 1\n        if not self.head:\n            self.head = Node(val)\n            self.tail = self.head\n            return\n            \n        new_node = Node(val, self.head)\n        self.head.prev = new_node\n        self.head = new_node\n        \n\n    def addAtTail(self, val: int) -> None:\n        self.len += 1\n        if not self.tail:\n            self.head = Node(val)\n            self.tail = self.head\n            return\n\n        new_node = Node(val, None, self.tail)\n        self.tail.next = new_node\n        self.tail = new_node\n        \n\n    def addAtIndex(self, index: int, val: int) -> None:\n        if index > self.len:\n            return\n\n        if index == 0:\n            self.addAtHead(val)\n            return\n        if index == self.len:\n            self.addAtTail(val)\n            return\n        \n        \n        curr = self.head\n        for i in range(index-1):\n            curr = curr.next\n        \n        nxt = curr.next\n        new_node = Node(val, nxt, curr)\n        curr.next = new_node\n        nxt.prev = new_node\n        self.len += 1\n        \n\n    def deleteAtIndex(self, index: int) -> None:\n        if index >= self.len:\n            return\n\n        if index == 0:\n            self.head = self.head.next\n            if not self.head:\n                self.tail = None\n            self.len -= 1\n            return\n        if index == self.len-1:\n            self.tail = self.tail.prev\n            if not self.tail:\n                self.head = None\n            self.len -= 1\n            return\n\n        curr = self.head\n        for i in range(index-1):\n            curr = curr.next\n        \n        nxt = curr.next.next\n        curr.next = nxt\n        nxt.prev = curr\n        self.len -= 1\n        \n\n\n# Your MyLinkedList object will be instantiated and called as such:\n# obj = MyLinkedList()\n# param_1 = obj.get(index)\n# obj.addAtHead(val)\n# obj.addAtTail(val)\n# obj.addAtIndex(index,val)\n# obj.deleteAtIndex(index)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-linked-list","has_notes":false,"flag_type":1}