{"id":1183342819,"question_id":3143,"lang":"python3","lang_name":"Python3","time":"4 months, 3 weeks","timestamp":1708628025,"status":10,"status_display":"Accepted","runtime":"70 ms","url":"/submissions/detail/1183342819/","is_pending":"Not Pending","title":"Longest Unequal Adjacent Groups Subsequence I","memory":"16.5 MB","code":"class Solution:\n    def getLongestSubsequence(self, words: List[str], groups: List[int]) -> List[str]:\n        # def\n        res = []\n        prev = -1\n        group_len = len(groups)\n            \n        for i in range(group_len):\n            if prev == groups[i]:\n                continue\n\n            res.append(words[i])\n            \n            prev = groups[i]\n\n        # return\n        return res","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-unequal-adjacent-groups-subsequence-i","has_notes":false,"flag_type":1}