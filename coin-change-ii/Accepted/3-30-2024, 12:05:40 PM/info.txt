{"id":1218519787,"question_id":518,"lang":"python3","lang_name":"Python3","time":"3 months, 2 weeks","timestamp":1711825540,"status":10,"status_display":"Accepted","runtime":"1470 ms","url":"/submissions/detail/1218519787/","is_pending":"Not Pending","title":"Coin Change II","memory":"60 MB","code":"class Solution:\n    def change(self, amount: int, coins: List[int]) -> int:\n        # combo sum of all possible ways\n        # memo = {}\n\n        @cache\n        def dp(curr: int, prev: int):\n            # if curr in memo:\n            #     return memo[curr]\n            if curr == 0:\n                return 1\n            \n            ways = 0\n            for coin in coins:\n                if coin <= curr and coin >= prev: \n                    take = dp(curr-coin, coin)\n                    ways += take\n            \n            # memo[curr] = ways\n            return ways\n        \n        ans = dp(amount, 0)\n        return -1 if isinf(ans) else ans","compare_result":"1111111111111111111111111111","title_slug":"coin-change-ii","has_notes":false,"flag_type":1}