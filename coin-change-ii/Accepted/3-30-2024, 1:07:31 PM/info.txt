{"id":1218560650,"question_id":518,"lang":"python3","lang_name":"Python3","time":"3 months, 2 weeks","timestamp":1711829251,"status":10,"status_display":"Accepted","runtime":"1404 ms","url":"/submissions/detail/1218560650/","is_pending":"Not Pending","title":"Coin Change II","memory":"93.6 MB","code":"class Solution:\n    def change(self, amount: int, coins: List[int]) -> int:\n        # combo sum of all possible ways\n        memo = {}\n\n        @lru_cache(maxsize=None)\n        def dp(curr: int, prev: int):\n            if curr == 0:\n                return 1\n            if (curr, prev) in memo:\n                return memo[(curr, prev)]\n            \n            ways = 0\n            for coin in coins:\n                if coin <= curr and coin >= prev: \n                    take = dp(curr-coin, coin)\n                    ways += take\n            \n            memo[(curr, prev)] = ways\n            \n            return ways\n        \n        ans = dp(amount, 0)\n        return ans","compare_result":"1111111111111111111111111111","title_slug":"coin-change-ii","has_notes":false,"flag_type":1}