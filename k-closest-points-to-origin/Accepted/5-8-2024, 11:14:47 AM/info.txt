{"id":1252884073,"question_id":1014,"lang":"python3","lang_name":"Python3","time":"2 months, 1 week","timestamp":1715192087,"status":10,"status_display":"Accepted","runtime":"572 ms","url":"/submissions/detail/1252884073/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"23.1 MB","code":"from heapq import heappush, heappop, heapify\nclass Solution:\n    # Time should be around O(nk)\n    def kClosest(self, points: List[List[int]], k: int) -> List[List[int]]:\n        # pqueue\n        d = []\n        m = {}\n        heapify(d)\n        for pair in points:\n            x, y = pair\n            dist = x**2 + y**2\n            heappush(d, dist)\n            \n            if dist not in m:\n                m[dist] = [pair]\n            else:\n                m[dist].append(pair)\n                \n        res = []\n        for i in range(k):\n            key = heappop(d)\n            res.append(m[key].pop())\n        return res","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-closest-points-to-origin","has_notes":false,"flag_type":1}