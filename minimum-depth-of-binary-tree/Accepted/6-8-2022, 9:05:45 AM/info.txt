{"id":717424264,"question_id":111,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 1 month","timestamp":1654704345,"status":10,"status_display":"Accepted","runtime":"269 ms","url":"/submissions/detail/717424264/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"98.8 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar minDepth = function(root) {\n    if (!root) {\n    return 0;\n  }\n\n  if (root.left && !root.right) {\n    return 1 + minDepth(root.left);\n  }\n  if (root.right && !root.left) {\n    return 1 + minDepth(root.right);\n  }\n  \n  return 1 + Math.min(minDepth(root.left), minDepth(root.right));\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}