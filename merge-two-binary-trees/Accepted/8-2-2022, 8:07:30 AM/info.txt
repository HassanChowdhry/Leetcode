{"id":763323839,"question_id":617,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 11 months","timestamp":1659452850,"status":10,"status_display":"Accepted","runtime":"187 ms","url":"/submissions/detail/763323839/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"49.7 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root1\n * @param {TreeNode} root2\n * @return {TreeNode}\n */\nvar mergeTrees = function(root1, root2) {\n      if (!root1) {\n         return root2\n  }\n  if (!root2) {\n    return root1;\n  }\n\n  root1.val += root2.val;\n\n  root1.left = mergeTrees(root1.left, root2.left);\n  root1.right = mergeTrees(root1.right, root2.right);\n\n  return root1;\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees","has_notes":false,"flag_type":1}