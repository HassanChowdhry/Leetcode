{"id":1264186985,"question_id":210,"lang":"python3","lang_name":"Python3","time":"1 month, 4 weeks","timestamp":1716311414,"status":10,"status_display":"Accepted","runtime":"82 ms","url":"/submissions/detail/1264186985/","is_pending":"Not Pending","title":"Course Schedule II","memory":"18.3 MB","code":"from collections import deque, defaultdict\nclass Solution:\n    def findOrder(self, numCourses: int, prerequisites: List[List[int]]) -> List[int]:\n        adj_map = defaultdict(list)\n        pred = [0]*numCourses\n        topnum = []\n        queue = deque()\n\n        for course, pre in prerequisites:\n            pred[course] += 1\n            adj_map[pre].append(course)\n\n        for course, pre_count in enumerate(pred):\n            if pre_count == 0:\n                queue.append(course)\n        \n        while queue:\n            course = queue.popleft()\n            topnum.append(course)\n            next_course = adj_map[course]\n            for c in next_course:\n                pred[c]-=1\n                if pred[c] == 0:\n                    queue.append(c)\n\n        for pre in pred:\n            if pre != 0:\n                return []\n\n        return topnum","compare_result":"111111111111111111111111111111111111111111111","title_slug":"course-schedule-ii","has_notes":false,"flag_type":1}