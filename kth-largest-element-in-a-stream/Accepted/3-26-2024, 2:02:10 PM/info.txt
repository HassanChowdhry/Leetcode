{"id":1214823855,"question_id":789,"lang":"python3","lang_name":"Python3","time":"3 months, 3 weeks","timestamp":1711486930,"status":10,"status_display":"Accepted","runtime":"67 ms","url":"/submissions/detail/1214823855/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"20.4 MB","code":"import heapq as h\n\nclass KthLargest:\n    def __init__(self, k: int, nums: List[int]):\n        self.k = k\n        self.min_heap = []\n        for num in nums:\n            self.add(num)\n\n    def add(self, val: int) -> int:\n        heapq.heappush(self.min_heap, val)\n        if len(self.min_heap) > self.k:\n            heapq.heappop(self.min_heap)\n        return self.min_heap[0]\n\n\n\n# Your KthLargest object will be instantiated and called as such:\n# obj = KthLargest(k, nums)\n# param_1 = obj.add(val)","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream","has_notes":false,"flag_type":1}