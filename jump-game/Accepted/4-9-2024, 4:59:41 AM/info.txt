{"id":1227594475,"question_id":55,"lang":"python3","lang_name":"Python3","time":"3 months, 1 week","timestamp":1712663981,"status":10,"status_display":"Accepted","runtime":"6098 ms","url":"/submissions/detail/1227594475/","is_pending":"Not Pending","title":"Jump Game","memory":"64.4 MB","code":"class Solution:\n    def canJump(self, nums: List[int]) -> bool:\n        num_len = len(nums)\n        memo = {}\n\n        @lru_cache(maxsize=None)\n        def backtrack(num, idx):\n            if idx >= num_len-1:\n                return True\n            if (num, idx) in memo:\n                return memo[(num, idx)]\n            \n            canJump = False\n            for i in range(num, 0, -1):\n                if idx+i >= num_len:\n                    return True\n\n                curr = nums[idx+i]\n\n                canJump = canJump or backtrack(curr, idx+i)\n\n            memo[(num, idx)] = canJump\n            return canJump\n        \n        return backtrack(nums[0], 0)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game","has_notes":false,"flag_type":1}