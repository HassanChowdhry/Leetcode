{"id":999453325,"question_id":543,"lang":"python3","lang_name":"Python3","time":"12Â months","timestamp":1689867427,"status":10,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/999453325/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"18.7 MB","code":"# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n        \nclass Solution:\n    def diameterOfBinaryTree(self, root: list[TreeNode]) -> int:\n      res = [0]\n      \n      def dfs(root: TreeNode):\n        if not root:\n          return -1\n        left = dfs(root.left)\n        right = dfs(root.right)\n\n        res[0] = max(res[0], 2 + left + right)\n        \n        return 1 + max(left, right)\n      \n      dfs(root)\n      return res[0]","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}