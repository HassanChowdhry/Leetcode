{"id":999453496,"question_id":543,"lang":"python3","lang_name":"Python3","time":"12Â months","timestamp":1689867441,"status":10,"status_display":"Accepted","runtime":"507 ms","url":"/submissions/detail/999453496/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"18.8 MB","code":"# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n        \nclass Solution:\n    def diameterOfBinaryTree(self, root: list[TreeNode]) -> int:\n      if not root:\n        return 0\n      \n      res = []\n      \n      def findDiameter(root: TreeNode) -> int:\n        if not root:\n          return 0\n        \n        return 1 + max(findDiameter(root.left), findDiameter(root.right))\n      \n      def dfs(root: TreeNode):\n        if not root:\n          return\n        \n        diam = findDiameter(root.left) + findDiameter(root.right)\n        res.append(diam)\n        \n        dfs(root.left)\n        dfs(root.right)\n          \n              \n      dfs(root)\n      return max(res)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}