{"id":623894761,"question_id":94,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 6 months","timestamp":1642676645,"status":10,"status_display":"Accepted","runtime":"115 ms","url":"/submissions/detail/623894761/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"38.5 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nfunction helper(root, stack) {\n  if (!root) {\n    return stack;\n  }\n  helper(root.left, stack);\n  stack.push(root.val);\n  return helper(root.right, stack);\n}\n\nfunction inorderTraversal(root) {\n  return helper(root, []);\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}