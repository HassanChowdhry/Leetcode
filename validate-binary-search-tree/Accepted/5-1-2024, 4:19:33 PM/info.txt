{"id":1246932034,"question_id":98,"lang":"python3","lang_name":"Python3","time":"2 months, 2 weeks","timestamp":1714605573,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/1246932034/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"18.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isValidBST(self, root: Optional[TreeNode]) -> bool:\n        # just run a inorder, that should be sorted, if not then not valid\n            if not root:\n                return True\n            res = []\n\n            def dfs(root):\n                if not root:\n                    return True\n                \n                left = True and dfs(root.left)\n                if len(res)>0 and root.val <= res[-1]:\n                    return False\n                res.append(root.val)\n\n                right = True and dfs(root.right)\n\n                return left and right\n            \n            return dfs(root)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}