{"id":1324678510,"question_id":1207,"lang":"python3","lang_name":"Python3","time":"17 hours, 18 minutes","timestamp":1721266537,"status":10,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/1324678510/","is_pending":"Not Pending","title":"Delete Nodes And Return Forest","memory":"17.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def delNodes(self, root: Optional[TreeNode], to_delete: List[int]) -> List[TreeNode]:\n        td = set(to_delete)\n        res = []\n\n        def dfs(root: TreeNode) -> None:\n            if not root:\n                return None\n            \n            root.left = dfs(root.left)\n            root.right = dfs(root.right)\n\n            if root.val in td:\n                if root.left:\n                    res.append(root.left)\n                if root.right:\n                    res.append(root.right)\n                return None\n            return root\n        \n        root = dfs(root)\n        if root and root not in td: res.append(root)\n        return res","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-nodes-and-return-forest","has_notes":false,"flag_type":1}