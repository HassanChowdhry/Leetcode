{"id":821446018,"question_id":22,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 9 months","timestamp":1665643082,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/821446018/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"42.4 MB","code":"/**\n * @param {number} n\n * @return {string[]}\n */\nvar generateParenthesis = function(n) {\n    let stack = [];\n  let res = [];\n\n  function backtracking(open, close) {\n    if (open === n && close === n) {\n      res.push(stack.join(''));\n      return;\n    }\n\n    if (open < n) {\n      stack.push('(');\n      backtracking(open + 1, close);\n      stack.pop();\n    }\n\n    if (close < open) {\n      stack.push(')');\n      backtracking(open, close + 1);\n      stack.pop();\n    }\n  }\n  backtracking(0, 0);\n\n  return res;\n};","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false,"flag_type":1}