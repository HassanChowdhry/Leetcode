{"id":775081179,"question_id":206,"lang":"python3","lang_name":"Python3","time":"1 year, 11 months","timestamp":1660647570,"status":10,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/775081179/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"15.5 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        node = head\n        stack = []\n        while node:\n            stack.append(node.val)\n            node = node.next\n        reverse = head\n        while reverse:\n            reverse.val = stack.pop()\n            reverse = reverse.next\n        return head","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}