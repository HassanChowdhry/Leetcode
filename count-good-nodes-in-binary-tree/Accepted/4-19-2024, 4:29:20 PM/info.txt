{"id":1236938975,"question_id":1544,"lang":"python3","lang_name":"Python3","time":"2 months, 4 weeks","timestamp":1713569360,"status":10,"status_display":"Accepted","runtime":"127 ms","url":"/submissions/detail/1236938975/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"31.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def goodNodes(self, root: TreeNode) -> int:\n        # dfs: keep track of max in curr path\n        def dfs(curr_node: TreeNode, max_in_path) -> int:\n            if not curr_node:\n                return 0\n            \n            good_node = 0\n\n            # add to path, check max vs curr val\n            if curr_node.val >= max_in_path:\n                good_node = 1\n                max_in_path = curr_node.val\n\n            return good_node + dfs(curr_node.left, max_in_path) + dfs(curr_node.right, max_in_path)\n        \n        return dfs(root, root.val)\n        \n","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false,"flag_type":1}