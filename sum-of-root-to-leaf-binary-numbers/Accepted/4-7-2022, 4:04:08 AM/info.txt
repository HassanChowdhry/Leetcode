{"id":675656865,"question_id":1079,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 3 months","timestamp":1649329448,"status":10,"status_display":"Accepted","runtime":"82 ms","url":"/submissions/detail/675656865/","is_pending":"Not Pending","title":"Sum of Root To Leaf Binary Numbers","memory":"44 MB","code":"/**\n * \n * @param {TreeNode} root \n * @param {number} sum \n * @returns \n */\nfunction dfs(root, binString, array) {\n\n  if (!root) {\n    return root;\n  }\n\n  binString += root.val;\n\n  if (!root.left && !root.right) {\n    array[0] += parseInt(binString, 2);\n  }\n\n  dfs(root.left, binString, array);\n  dfs(root.right, binString, array);\n\n  return array;\n}\n\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nfunction sumRootToLeaf(root) {\n  let array = [0];\n  dfs(root, '', array);\n  return array[0];\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-root-to-leaf-binary-numbers","has_notes":false,"flag_type":1}