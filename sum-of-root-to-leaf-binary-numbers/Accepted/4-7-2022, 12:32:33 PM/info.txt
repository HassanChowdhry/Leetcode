{"id":675920192,"question_id":1079,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 3 months","timestamp":1649359953,"status":10,"status_display":"Accepted","runtime":"98 ms","url":"/submissions/detail/675920192/","is_pending":"Not Pending","title":"Sum of Root To Leaf Binary Numbers","memory":"44.6 MB","code":"/**\n * \n * @param {TreeNode} root \n * @param {String} binString \n * @param {Number[]} array \n * @returns \n */\nfunction dfs(root, binString, sum) {\n\n  if (!root) {\n    return 0;\n  }\n\n  binString += root.val.toString();\n\n  if (!root.left && !root.right) {\n    sum += parseInt(binString, 2);\n  }\n\n  return sum + dfs(root.left, binString, sum) + dfs(root.right, binString, sum);\n\n}\n\n/**\n * *Time O(n), Space O(1)? \n * @param {TreeNode} root\n * @return {number}\n */\nfunction sumRootToLeaf(root) {\n  return dfs(root, '', 0);\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-root-to-leaf-binary-numbers","has_notes":false,"flag_type":1}