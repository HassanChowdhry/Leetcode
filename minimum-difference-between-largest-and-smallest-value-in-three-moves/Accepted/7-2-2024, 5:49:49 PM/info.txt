{"id":1307643152,"question_id":1616,"lang":"python3","lang_name":"Python3","time":"2 weeks, 1 day","timestamp":1719967789,"status":10,"status_display":"Accepted","runtime":"280 ms","url":"/submissions/detail/1307643152/","is_pending":"Not Pending","title":"Minimum Difference Between Largest and Smallest Value in Three Moves","memory":"27.4 MB","code":"class Solution:\n    def minDifference(self, nums: List[int]) -> int:\n        N = len(nums)\n        if N <= 4:\n            return 0\n        nums.sort()\n        res = nums[N-1] - nums[0]\n\n        l, r = 2, N\n\n        while l >= -1:\n            minn = nums[l+1]\n            maxx = nums[r-1]\n\n            res = min(res, maxx-minn)\n\n            l-=1\n            r-=1\n    \n        return res\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-difference-between-largest-and-smallest-value-in-three-moves","has_notes":false,"flag_type":1}