{"id":1281859230,"question_id":523,"lang":"python3","lang_name":"Python3","time":"1 month, 1 week","timestamp":1717864374,"status":10,"status_display":"Accepted","runtime":"836 ms","url":"/submissions/detail/1281859230/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"36.2 MB","code":"class Solution:\n    def checkSubarraySum(self, nums: List[int], k: int) -> bool:\n        if len(nums) == 1:\n            return False\n        seen = {0: -1}\n        running = 0\n\n        for i, num in enumerate(nums):\n            running += num\n            mod = running % k\n            if mod in seen:\n                if i - seen[mod] > 1:\n                    return True\n            else:\n                seen[mod] = i\n        \n        return False\n            ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}