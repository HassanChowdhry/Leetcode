{"id":1248556158,"question_id":105,"lang":"python3","lang_name":"Python3","time":"2 months, 2 weeks","timestamp":1714767717,"status":10,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/1248556158/","is_pending":"Not Pending","title":"Construct Binary Tree from Preorder and Inorder Traversal","memory":"88.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def buildTree(self, preorder: List[int], inorder: List[int]) -> Optional[TreeNode]:\n        if not preorder or not inorder:\n            return None\n        \n        root = TreeNode(preorder[0])\n        root_idx_inorder = inorder.index(root.val)\n\n        root.left = self.buildTree(preorder[1:root_idx_inorder+1], inorder[:root_idx_inorder])\n        root.right = self.buildTree(preorder[root_idx_inorder+1:], inorder[root_idx_inorder+1:])\n\n        return root","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-preorder-and-inorder-traversal","has_notes":false,"flag_type":1}