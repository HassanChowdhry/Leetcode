{"id":1273078413,"question_id":120,"lang":"python3","lang_name":"Python3","time":"1 month, 2 weeks","timestamp":1717141011,"status":10,"status_display":"Accepted","runtime":"73 ms","url":"/submissions/detail/1273078413/","is_pending":"Not Pending","title":"Triangle","memory":"20 MB","code":"class Solution:\n    def minimumTotal(self, triangle: List[List[int]]) -> int:\n        cache = {}\n        N = len(triangle)\n\n        \n        def dfs(i, prev):\n            if (i, prev) in cache:\n                return cache[(i, prev)]\n            curr = triangle[i][prev]\n            \n            if i < len(triangle)-1:\n                curr += min(dfs(i+1, prev), dfs(i+1, prev+1))\n\n            cache[(i, prev)] = curr\n            return curr\n\n            take = min(left, right)\n            cache[(i, prev)] = take\n            return take\n        \n        return dfs(0, 0)","compare_result":"111111111111111111111111111111111111111111111","title_slug":"triangle","has_notes":false,"flag_type":1}