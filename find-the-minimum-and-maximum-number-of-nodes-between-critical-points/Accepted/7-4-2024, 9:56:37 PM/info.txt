{"id":1310057499,"question_id":2182,"lang":"python3","lang_name":"Python3","time":"1 week, 6 days","timestamp":1720155397,"status":10,"status_display":"Accepted","runtime":"349 ms","url":"/submissions/detail/1310057499/","is_pending":"Not Pending","title":"Find the Minimum and Maximum Number of Nodes Between Critical Points","memory":"45.2 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def nodesBetweenCriticalPoints(self, head: Optional[ListNode]) -> List[int]:\n        res = []\n\n        prev, curr = head, head.next\n        dist = 0\n        prevIsCritical = False\n        i = first = 0\n        while curr and curr.next:\n            if (prev.val > curr.val < curr.next.val) or (prev.val < curr.val > curr.next.val):\n                if prevIsCritical: \n                    res.append(dist)\n                    res.append(i - first)\n                else:\n                    first = i\n                dist = 0\n                prevIsCritical = True\n\n            if prevIsCritical: dist += 1\n            prev = curr\n            curr = curr.next\n            i+=1\n        return [min(res), max(res)] if len(res) >= 2 else [-1, -1]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-minimum-and-maximum-number-of-nodes-between-critical-points","has_notes":false,"flag_type":1}