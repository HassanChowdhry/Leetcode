{"id":671772069,"question_id":948,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 3 months","timestamp":1648837776,"status":10,"status_display":"Accepted","runtime":"5932 ms","url":"/submissions/detail/671772069/","is_pending":"Not Pending","title":"Sort an Array","memory":"56.8 MB","code":"/**\n *? Time O(n), Space O(1)\n *\n * @param {Any[]} array \n * @param {Number} start \n * @param {Number} end \n */\nfunction partition(array, start, end) {\n  let pivot = array[end];\n  let pIndex = start;\n\n  for (let i = start; i < end; i++) {\n\n    if (array[i] <= pivot) {\n\n      [array[i], array[pIndex]] = [array[pIndex], array[i]];\n      pIndex += 1;\n    }\n  }\n\n  [array[pIndex], array[end]] = [array[end], array[pIndex]];\n  return pIndex;\n}\n\n/**\n ** Time: Worst case O(n^2), Average case O(nlogn), Space: O(1)\n *\n * @param {Any[]} array \n * @param {Number} start \n * @param {Number} end \n */\nfunction quickSort(array, start, end) {\n  if (start >= end) {\n    return array;\n  }\n  \n  let pIndex = partition(array, start, end);\n  quickSort(array, start, pIndex - 1);\n  quickSort(array, pIndex + 1, end);\n\n  return array;\n}\n\nfunction sortArray(array) {\n    return quickSort(array, 0, array.length - 1);\n}","compare_result":"1111111111111","title_slug":"sort-an-array","has_notes":false,"flag_type":1}