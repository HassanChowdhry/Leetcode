{"id":1315518240,"question_id":948,"lang":"python3","lang_name":"Python3","time":"1 week, 2 days","timestamp":1720548855,"status":10,"status_display":"Accepted","runtime":"980 ms","url":"/submissions/detail/1315518240/","is_pending":"Not Pending","title":"Sort an Array","memory":"25.4 MB","code":"class Solution:\n    def sortArray(self, nums: List[int]) -> List[int]:\n        def mergeSort(nums):\n            n = len(nums)\n\n            if n <= 1:\n                return nums\n\n            mid = n // 2\n            left = mergeSort(nums[:mid])\n            right = mergeSort(nums[mid:])\n\n            return merge(left, right)\n        \n        def merge(left, right):\n            res = []\n            l, r = len(left), len(right)\n            i = j = 0\n\n            while i < l and j < r:\n                if left[i] < right[j]:\n                    res.append(left[i])\n                    i+=1\n                else:\n                    res.append(right[j])\n                    j+=1\n            if i < l: res += left[i:]\n            if j < r: res += right[j:]\n\n            return res\n        \n        return mergeSort(nums)","compare_result":"111111111111111111111","title_slug":"sort-an-array","has_notes":false,"flag_type":1}