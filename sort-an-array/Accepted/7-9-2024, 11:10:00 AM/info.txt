{"id":1315513193,"question_id":948,"lang":"python3","lang_name":"Python3","time":"1 week, 2 days","timestamp":1720548600,"status":10,"status_display":"Accepted","runtime":"1063 ms","url":"/submissions/detail/1315513193/","is_pending":"Not Pending","title":"Sort an Array","memory":"25.5 MB","code":"from typing import List\nclass Solution:\n    def sortArray(self, nums: List[int]) -> List[int]:\n        \n        def merge(left, right):\n            res = []\n            i, j = 0, 0\n\n            while i < len(left) and j < len(right):\n                if left[i] < right[j]:\n                    res.append(left[i])\n                    i+=1\n                else:\n                    res.append(right[j])\n                    j+=1\n            \n            if i < len(left): res += left[i:]\n            if j < len(right): res += right[j:]\n\n            return res\n\n\n        def mergeSort(nums: List[int]) -> List[int]:\n            n = len(nums)\n            if n <= 1:\n                return nums\n            \n            middle = n//2\n            left = nums[:middle]\n            right = nums[middle:]\n\n            left = mergeSort(left)\n            right = mergeSort(right)\n            \n            return merge(left, right)\n        \n        return mergeSort(nums)","compare_result":"111111111111111111111","title_slug":"sort-an-array","has_notes":false,"flag_type":1}