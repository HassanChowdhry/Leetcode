{"id":994314033,"question_id":417,"lang":"python3","lang_name":"Python3","time":"1Â year","timestamp":1689340745,"status":10,"status_display":"Accepted","runtime":"1092 ms","url":"/submissions/detail/994314033/","is_pending":"Not Pending","title":"Pacific Atlantic Water Flow","memory":"18.3 MB","code":"# https://leetcode.com/problems/pacific-atlantic-water-flow/\n\nclass Solution:\n    def pacificAtlantic(self, heights: list[list[int]]) -> list[list[int]]:\n        # dfs\n        # check surrounding for lower numbers\n        # chose any possible path leading to the atlantic\n\n        # declare\n        vP = set()\n        vA = set()\n        ansP = set()\n        ansA = set()\n        ans = []\n\n        # logic\n        def dfsP(i: int, j: int):\n            if (i, j) in vP:\n              return False\n            if i == 0 or j == 0 or (i, j) in ansP:\n              return True\n\n            vP.add((i, j))\n\n            check = False\n            \n            if heights[i][j] >= heights[i-1][j]:\n              check |= dfsP(i-1, j)\n            \n            if heights[i][j] >= heights[i][j-1]:\n              check |= dfsP(i, j-1)\n            \n            if i < len(heights)-1 and heights[i][j] >= heights[i+1][j]:\n              check |= dfsP(i+1, j)\n            \n            if j < len(heights[i])-1 and heights[i][j] >= heights[i][j+1]:\n              check |= dfsP(i, j+1)\n\n            if check: ansP.add((i, j))\n            return check\n        \n        def dfsA(i: int, j: int):\n          \n            if (i, j) in vA:\n              return False\n            if i == len(heights)-1 or j == len(heights[i])-1 or (i, j) in ansA:\n              return True\n\n            vA.add((i, j))\n\n            check = False\n            \n            if heights[i][j] >= heights[i+1][j]:\n              check |= dfsA(i+1, j)\n            \n            if heights[i][j] >= heights[i][j+1]:\n              check |= dfsA(i, j+1)\n            \n            if i > 0 and heights[i][j] >= heights[i-1][j]:\n              check |= dfsA(i-1, j)\n            \n            if j > 0 and heights[i][j] >= heights[i][j-1]:\n              check |= dfsA(i, j-1)\n            \n            if check: ansA.add((i, j))\n            return check\n            \n        # main loop\n        for i in range(len(heights)):\n            for j in range(len(heights[i])):\n                if dfsP(i, j) and dfsA(i, j):\n                  ans.append([i, j])\n                vA.clear()\n                vP.clear()\n        \n        # return\n        return ans","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"pacific-atlantic-water-flow","has_notes":false,"flag_type":1}