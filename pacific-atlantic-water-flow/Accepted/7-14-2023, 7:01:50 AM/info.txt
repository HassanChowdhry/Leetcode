{"id":994342173,"question_id":417,"lang":"python3","lang_name":"Python3","time":"1Â year","timestamp":1689343310,"status":10,"status_display":"Accepted","runtime":"268 ms","url":"/submissions/detail/994342173/","is_pending":"Not Pending","title":"Pacific Atlantic Water Flow","memory":"17.9 MB","code":"# https://leetcode.com/problems/pacific-atlantic-water-flow/\n\nclass Solution:\n    def pacificAtlantic(self, heights: list[list[int]]) -> list[list[int]]:\n      ROWS, COLS = len(heights), len(heights[0])\n      ans = []\n      pacific = set()\n      atlantic = set()\n      \n      def dfs(r, c, visit, prevHeight):\n        if (r, c) in visit or r < 0 or c < 0 or r == ROWS or c == COLS or heights[r][c] < prevHeight:\n          return\n        visit.add((r, c))\n        dfs(r+1, c, visit, heights[r][c])\n        dfs(r-1, c, visit, heights[r][c])\n        dfs(r, c+1, visit, heights[r][c])\n        dfs(r, c-1, visit, heights[r][c])\n        \n      \n      for c in range(COLS):\n        dfs(0, c, pacific, heights[0][c])\n        dfs(ROWS-1, c, atlantic, heights[ROWS-1][c])\n        \n      for r in range(ROWS):\n        dfs(r, 0, pacific, heights[r][0])\n        dfs(r, COLS-1, atlantic, heights[r][COLS-1])\n      \n      ans = pacific.intersection(atlantic)\n      \n      # return\n      return list(ans)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"pacific-atlantic-water-flow","has_notes":false,"flag_type":1}