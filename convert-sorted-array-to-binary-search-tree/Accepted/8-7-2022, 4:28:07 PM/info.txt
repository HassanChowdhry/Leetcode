{"id":767961702,"question_id":108,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 11 months","timestamp":1659914887,"status":10,"status_display":"Accepted","runtime":"89 ms","url":"/submissions/detail/767961702/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"44.7 MB","code":"\nfunction treeMaker(nums, left, right) {\n  if (left > right) return null;\n\n  let middle = Math.floor((left + right) / 2); \n  let root = new TreeNode(nums[middle]);\n  root.left = treeMaker(nums, left, middle - 1);\n  root.right = treeMaker(nums, middle + 1, right);\n\n  return root;\n}\n/**\n * @param {number[]} nums\n * @return {TreeNode}\n */\nfunction sortedArrayToBST(nums) {\n  let left = 0;\n  let right = nums.length - 1;\n\n  return treeMaker(nums, left, right);\n}\n","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}