{"id":708348520,"question_id":1320,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 1 month","timestamp":1653659418,"status":10,"status_display":"Accepted","runtime":"83 ms","url":"/submissions/detail/708348520/","is_pending":"Not Pending","title":"Remove All Adjacent Duplicates in String II","memory":"49.9 MB","code":"class Dup {\n\n  constructor(char, occur) {\n    this.char = char;\n    this.occur = occur;\n  }\n\n  getChar() {\n    let s = '';\n    let n = this.occur;\n\n    while (n > 0) {\n      s += this.char;\n      n--;\n    }\n\n    return s;\n  }\n}\n/**\n ** Using class - Time O(n), Space O(n)\n * @param {string} s\n * @param {number} k\n * @return {string}\n */\nfunction removeDuplicates(s, k) {\n  let stack = [];\n  stack.push(new Dup(s[0], 1));\n\n  for (let c = 1; c < s.length; c++) {\n    let prevChar = stack.pop();\n\n    if (prevChar && prevChar.char === s[c]) {\n      prevChar.occur += 1;\n    }\n\n    if (prevChar && prevChar.occur !== k) {\n      stack.push(prevChar);\n    }\n\n    if (!prevChar || prevChar.char !== s[c]) {\n      stack.push(new Dup(s[c], 1));\n    } \n  }\n  let res = '';\n\n  for (let obj of stack) {\n    res += obj.getChar();\n  }\n\n  return res;\n}","compare_result":"11111111111111111111","title_slug":"remove-all-adjacent-duplicates-in-string-ii","has_notes":false,"flag_type":1}