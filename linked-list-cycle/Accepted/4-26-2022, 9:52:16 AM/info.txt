{"id":687981829,"question_id":141,"lang":"javascript","lang_name":"JavaScript","time":"2 years, 2 months","timestamp":1650991936,"status":10,"status_display":"Accepted","runtime":"83 ms","url":"/submissions/detail/687981829/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"44.6 MB","code":"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar hasCycle = function(head) {\n     let fast = head;\n  let slow = head;\n\n  while (fast != null && fast.next != null) {\n    \n      fast = fast.next.next;\n    slow = slow.next;\n    if (fast === slow) {\n      return true;\n    }\n    \n    \n  }\n\n  return false;\n\n};","compare_result":"111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}