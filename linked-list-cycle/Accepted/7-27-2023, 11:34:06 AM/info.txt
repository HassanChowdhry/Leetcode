{"id":1005577112,"question_id":141,"lang":"python3","lang_name":"Python3","time":"11 months, 3 weeks","timestamp":1690482846,"status":10,"status_display":"Accepted","runtime":"58 ms","url":"/submissions/detail/1005577112/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"20.3 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: Optional[ListNode]) -> bool:\n        slow = head\n        fast = head\n        isFirstIter = True\n        \n        while fast and fast.next:\n            if slow == fast and not isFirstIter:\n                return True\n            \n            isFirstIter = False\n            slow = slow.next\n            fast = fast.next.next\n        \n        return False","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}