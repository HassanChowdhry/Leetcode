{"id":1280175021,"question_id":648,"lang":"python3","lang_name":"Python3","time":"1 month, 1 week","timestamp":1717735570,"status":10,"status_display":"Accepted","runtime":"107 ms","url":"/submissions/detail/1280175021/","is_pending":"Not Pending","title":"Replace Words","memory":"33.5 MB","code":"from collections import defaultdict\n\n\nclass TrieNode:\n    def __init__(self):\n        self.children = defaultdict(TrieNode)\n        self.end = False\n\n\nclass Trie:\n    def __init__(self):\n        self.root = TrieNode()\n\n    def insert(self, word: str) -> None:\n        curr = self.root\n        for c in word:\n            curr = curr.children[c]\n        \n        curr.end = True\n    \n    def replace(self, word: str) -> str:\n        res = \"\"\n        curr = self.root\n        for i in word:\n            if i not in curr.children:\n                return word\n                \n            res += i\n            curr = curr.children[i]\n\n            if curr.end:\n                return res\n        return res\n\n   \n\nclass Solution:\n    def replaceWords(self, dictionary: List[str], sentence: str) -> str:\n        trie = Trie()\n        for word in dictionary:\n            trie.insert(word)\n        words = sentence.split(\" \")\n        res = []\n\n        for word in words:\n            res.append(trie.replace(word))\n        \n        return ' '.join(res)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"replace-words","has_notes":false,"flag_type":1}