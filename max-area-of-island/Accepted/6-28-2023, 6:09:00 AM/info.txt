{"id":981615277,"question_id":695,"lang":"python3","lang_name":"Python3","time":"1Â year","timestamp":1687957740,"status":10,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/981615277/","is_pending":"Not Pending","title":"Max Area of Island","memory":"19.6 MB","code":"# https://leetcode.com/problems/max-area-of-island/\n\n# Time O(mn), Space O(1)\nclass Solution:\n    def maxAreaOfIsland(self, grid: list[list[int]]) -> int:\n      max = 0\n      \n      for i in range(len(grid)):\n        for j in range(len(grid[i])):\n          # unvisited land\n          if grid[i][j] == 1:\n            count = self.dfs(grid, i, j)\n            max = count if max < count else max\n      \n      return max\n    \n    def dfs(self, grid: list[list[int]], i: int, j: int):\n      if not self.inRange(grid, i, j) or grid[i][j] != 1:\n        return 0      \n      \n      grid[i][j] = 0\n\n      return 1 + self.dfs(grid, i, j + 1) + self.dfs(grid, i + 1, j) + self.dfs(grid, i, j - 1) + self.dfs(grid, i - 1, j)\n    \n    \n    def inRange(self, grid, i, j):\n      return i >= 0 and j >= 0 and i < len(grid) and j < len(grid[i])","compare_resulttitle_slug":"max-area-of-island","has_notes":false,"flag_type":1}