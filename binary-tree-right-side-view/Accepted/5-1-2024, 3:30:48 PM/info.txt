{"id":1246915229,"question_id":199,"lang":"python3","lang_name":"Python3","time":"2 months, 2 weeks","timestamp":1714602648,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/1246915229/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"16.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:\n        # bfs \n        if not root:\n            return []\n\n        res = []\n        queue = [root]\n\n        while len(queue) > 0:\n            length = len(queue)\n            for i in range(length):\n                curr_node = queue.pop(0)\n\n                if not curr_node:\n                    continue\n\n                if curr_node.left:\n                    queue.append(curr_node.left)\n\n                if curr_node.right:\n                    queue.append(curr_node.right)\n                \n                if i == length-1:\n                    res.append(curr_node.val)\n                \n        \n        return res","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}