{"id":1278953897,"question_id":1422,"lang":"python3","lang_name":"Python3","time":"1 month, 1 week","timestamp":1717633270,"status":10,"status_display":"Accepted","runtime":"406 ms","url":"/submissions/detail/1278953897/","is_pending":"Not Pending","title":"Divide Array in Sets of K Consecutive Numbers","memory":"33.8 MB","code":"from heapq import heapify, heappop\nclass Solution:\n    def isPossibleDivide(self, nums: List[int], k: int) -> bool:\n        N = len(nums)\n        if N % k:\n            return False\n        if k == 1:\n            return True\n        \n        frq = Counter(nums)\n        minheap = list(frq.keys())\n        heapify(minheap)\n\n        while minheap:\n            peek = minheap[0]\n            for i in range(peek, k+peek):\n                if i not in frq:\n                    return False\n                \n                frq[i]-=1\n                if frq[i] == 0:\n                    del frq[i]\n                    if i == minheap[0]:\n                        heappop(minheap)\n        \n        return True","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"divide-array-in-sets-of-k-consecutive-numbers","has_notes":false,"flag_type":1}