{"id":1291949927,"question_id":853,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1718683574,"status":10,"status_display":"Accepted","runtime":"466 ms","url":"/submissions/detail/1291949927/","is_pending":"Not Pending","title":"Most Profit Assigning Work","memory":"19.8 MB","code":"from heapq import heapify, heappop, heappush\nclass Solution:\n    def maxProfitAssignment(self, difficulty: List[int], profit: List[int], worker: List[int]) -> int:\n        maxheap = []\n        heapify(maxheap)\n        for p, d in zip(profit, difficulty):\n            heappush(maxheap, (-p, d))\n        if not maxheap: return 0\n        \n        total_profit = 0\n        curr, level = heappop(maxheap)\n        curr = abs(curr)\n        for worker_level in sorted(worker, reverse=True):\n            while maxheap and worker_level < level:\n                curr, level = heappop(maxheap)\n                curr = abs(curr)\n            if not maxheap and worker_level < level: break\n            total_profit += curr\n            \n\n        return total_profit","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"most-profit-assigning-work","has_notes":false,"flag_type":1}