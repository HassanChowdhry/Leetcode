{"id":1256622983,"question_id":355,"lang":"python3","lang_name":"Python3","time":"2Â months","timestamp":1715576377,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/1256622983/","is_pending":"Not Pending","title":"Design Twitter","memory":"16.8 MB","code":"class Twitter:\n\n    def __init__(self):\n        self.k = 10\n        self.user_posts = {}\n        self.user_follow = {}\n        self.post_occurence = {}\n        self.postId = 0\n\n    def postTweet(self, userId: int, tweetId: int) -> None:\n        if userId not in self.user_posts:\n            self.user_posts[userId] = []\n        \n        self.post_occurence[self.postId] = tweetId\n        if self.postId not in self.user_posts[userId]:\n            self.user_posts[userId].append(self.postId)\n        \n        self.postId += 1\n\n\n    def getNewsFeed(self, userId: int) -> List[int]:\n        heap = []\n        heapq.heapify(heap)\n\n        if userId in self.user_posts:\n            for vals in self.user_posts[userId]:\n                if len(heap) >= self.k:\n                    heapq.heappop(heap)\n                heapq.heappush(heap, vals)\n\n        if userId not in self.user_follow:\n            res = sorted(heap, reverse=True)\n            res = [self.post_occurence[num] for num in res]\n            return res\n        \n        followers = self.user_follow[userId]\n\n        for follow in followers:\n            if follow not in self.user_posts:\n                continue \n\n            posts = self.user_posts[follow]\n            for post in posts:\n                if len(heap) >= self.k:\n                    heapq.heappop(heap)\n                heapq.heappush(heap, post)\n\n        res = sorted(heap, reverse=True)\n        res = [self.post_occurence[num] for num in res]\n        return res\n\n    def follow(self, followerId: int, followeeId: int) -> None:\n        if followerId not in self.user_follow:\n            self.user_follow[followerId] = []\n\n        if followeeId not in self.user_follow[followerId]:\n            self.user_follow[followerId].append(followeeId)\n\n\n    def unfollow(self, followerId: int, followeeId: int) -> None:\n        if followerId in self.user_follow:\n            if followeeId in self.user_follow[followerId]:\n                self.user_follow[followerId].remove(followeeId)\n        \n            if len(self.user_follow[followerId])==0:\n                del self.user_follow[followerId]\n\n# Your Twitter object will be instantiated and called as such:\n# obj = Twitter()\n# obj.postTweet(userId,tweetId)\n# param_2 = obj.getNewsFeed(userId)\n# obj.follow(followerId,followeeId)\n# obj.unfollow(followerId,followeeId)","compare_result":"1111111111111111","title_slug":"design-twitter","has_notes":false,"flag_type":1}