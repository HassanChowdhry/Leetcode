{"id":1322130934,"question_id":2306,"lang":"python3","lang_name":"Python3","time":"3Â days","timestamp":1721067832,"status":10,"status_display":"Accepted","runtime":"1547 ms","url":"/submissions/detail/1322130934/","is_pending":"Not Pending","title":"Create Binary Tree From Descriptions","memory":"25.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom collections import defaultdict\nclass Solution:\n    def createBinaryTree(self, descriptions: List[List[int]]) -> Optional[TreeNode]:\n        mp = defaultdict() #val: treenode, isChild\n        children = set()\n\n        for parent, child, isLeft in descriptions:\n            if parent not in mp:\n                mp[parent] = TreeNode(parent)\n            if child not in mp:\n                mp[child] = TreeNode(child)\n\n            if isLeft:\n                mp[parent].left = mp[child]\n            else:\n                mp[parent].right = mp[child]\n\n            children.add(child)\n        \n        for node in mp:\n            if node not in children:\n                return mp[node]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"create-binary-tree-from-descriptions","has_notes":false,"flag_type":1}