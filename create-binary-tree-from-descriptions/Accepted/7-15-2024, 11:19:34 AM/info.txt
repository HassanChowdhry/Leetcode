{"id":1322125948,"question_id":2306,"lang":"python3","lang_name":"Python3","time":"3Â days","timestamp":1721067574,"status":10,"status_display":"Accepted","runtime":"1679 ms","url":"/submissions/detail/1322125948/","is_pending":"Not Pending","title":"Create Binary Tree From Descriptions","memory":"25.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def createBinaryTree(self, descriptions: List[List[int]]) -> Optional[TreeNode]:\n        mp = {} #val: treenode, isChild\n\n        for parent, child, isLeft in descriptions:\n            if parent in mp:\n                p = mp[parent][0]\n            else:\n                p = TreeNode(parent)\n            if child in mp:\n                c = mp[child][0]\n            else:\n                c = TreeNode(child)\n\n            if isLeft:\n                p.left = c\n            else:\n                p.right = c\n\n            if parent not in mp:\n                mp[parent] = [p, False]\n            if child not in mp:\n                mp[child] = [c, True]\n            mp[child][1] = True\n        \n        for node in mp:\n            if not mp[node][1]:\n                return mp[node][0]\n\n        return None","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"create-binary-tree-from-descriptions","has_notes":false,"flag_type":1}