{"id":1268169867,"question_id":300,"lang":"python3","lang_name":"Python3","time":"1Â month, 3Â weeks","timestamp":1716697758,"status":10,"status_display":"Accepted","runtime":"2747 ms","url":"/submissions/detail/1268169867/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"16.8 MB","code":"class Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        n = len(nums)\n        dp = [1]*(n)\n        mx = 1\n\n        for start in range(n-1, -1, -1):\n            for end in range(start, n):\n                if nums[start] < nums[end]:\n                    dp[start] = max(dp[start], dp[end]+1)\n                    mx = max(mx, dp[start])\n        return mx","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}