{"id":1272680568,"question_id":494,"lang":"python3","lang_name":"Python3","time":"1 month, 2 weeks","timestamp":1717097173,"status":10,"status_display":"Accepted","runtime":"198 ms","url":"/submissions/detail/1272680568/","is_pending":"Not Pending","title":"Target Sum","memory":"37.6 MB","code":"class Solution:\n    def findTargetSumWays(self, nums: List[int], target: int) -> int:\n        N = len(nums)\n        dp = {}\n\n        def dfs(i, curr):\n            if curr == target and i == N:\n                return 1\n            if i >= N:\n                return 0\n            if (i, curr) in dp:\n                return dp[(i, curr)]\n\n            ways = dfs(i+1, curr-nums[i]) + dfs(i+1, curr+nums[i])\n            dp[(i, curr)] = ways\n            return ways\n        \n        return dfs(0, 0)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"target-sum","has_notes":false,"flag_type":1}