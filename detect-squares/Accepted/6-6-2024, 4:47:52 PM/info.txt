{"id":1280024116,"question_id":2139,"lang":"python3","lang_name":"Python3","time":"1 month, 1 week","timestamp":1717717672,"status":10,"status_display":"Accepted","runtime":"403 ms","url":"/submissions/detail/1280024116/","is_pending":"Not Pending","title":"Detect Squares","memory":"18.6 MB","code":"from collections import defaultdict\nclass DetectSquares:\n\n    def __init__(self):\n        self.graph = defaultdict(int)\n        self.p = []\n\n    def add(self, point: List[int]) -> None:\n        self.graph[tuple(point)] +=1\n        self.p.append(point)\n\n    def count(self, point: List[int]) -> int:\n        take = 0\n        x, y = point\n\n        for x2, y2 in self.p:\n            if abs(y-y2) != abs(x-x2) or x==x2 or y==y2 : continue\n            \n            take += (self.graph[(x, y2)] * self.graph[(x2, y)])\n\n\n        return take\n\n# Your DetectSquares object will be instantiated and called as such:\n# obj = DetectSquares()\n# obj.add(point)\n# param_2 = obj.count(point)","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"detect-squares","has_notes":false,"flag_type":1}