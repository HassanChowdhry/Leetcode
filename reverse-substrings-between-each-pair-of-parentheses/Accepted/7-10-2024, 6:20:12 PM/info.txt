{"id":1316998785,"question_id":1298,"lang":"python3","lang_name":"Python3","time":"1Â week","timestamp":1720660812,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/1316998785/","is_pending":"Not Pending","title":"Reverse Substrings Between Each Pair of Parentheses","memory":"16.6 MB","code":"class Solution:\n    def reverseParentheses(self, s: str) -> str:\n        stack = []\n        for c in s:\n            if c == \"(\":\n                stack.append(\"R\")\n                stack.append(\"\")\n            elif c == \")\":\n                curr = stack.pop()\n                curr = curr[::-1]\n                stack.pop()\n                if len(stack) > 0:\n                    stack[-1] += curr\n                else:\n                    stack.append(curr)\n            else:\n                if len(stack) > 0:\n                    stack[-1] += c\n                else:\n                    stack.append(c)\n        \n        return stack[0]","compare_result":"11111111111111111111111111111111111111","title_slug":"reverse-substrings-between-each-pair-of-parentheses","has_notes":false,"flag_type":1}