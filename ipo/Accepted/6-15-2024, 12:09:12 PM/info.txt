{"id":1289372578,"question_id":502,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1718478552,"status":10,"status_display":"Accepted","runtime":"694 ms","url":"/submissions/detail/1289372578/","is_pending":"Not Pending","title":"IPO","memory":"41 MB","code":"from heapq import heappush, heapify, heappop\nclass Solution:\n    def findMaximizedCapital(self, k: int, cap: int, p: List[int], c: List[int]) -> int:\n        pairs = sorted(list(zip(c, p)))\n        N = len(pairs)\n        minheap = []\n        heapify(minheap)\n\n        capital = cap\n        prev = 0\n        while k > 0:\n            k-=1\n            i = prev\n            while i < N and pairs[i][0] <= capital:\n                heappush(minheap, -pairs[i][1])\n                i+=1\n            \n            if not minheap:\n                return capital\n\n            prev = i\n            capital += abs(heappop(minheap))\n\n        return capital","compare_result":"11111111111111111111111111111111111","title_slug":"ipo","has_notes":false,"flag_type":1}