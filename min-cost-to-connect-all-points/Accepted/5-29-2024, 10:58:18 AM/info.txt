{"id":1271672708,"question_id":1706,"lang":"python3","lang_name":"Python3","time":"1 month, 2 weeks","timestamp":1717005498,"status":10,"status_display":"Accepted","runtime":"743 ms","url":"/submissions/detail/1271672708/","is_pending":"Not Pending","title":"Min Cost to Connect All Points","memory":"81.5 MB","code":"from heapq import heapify, heappush, heappop\nclass Solution:\n    def minCostConnectPoints(self, points: List[List[int]]) -> int:\n        seen, minheap, curr, cost = set(), [], 0, 0\n        seen.add(curr)\n        heapify(minheap)\n\n        for i in range(1, len(points)):\n            dist = abs(points[curr][1]-points[i][1]) + abs(points[curr][0]-points[i][0])\n            heappush(minheap, (dist, i))\n        \n        while len(seen)<len(points):\n            d, pos = heappop(minheap)\n            if pos in seen:\n                continue\n            seen.add(pos)\n            cost += d\n\n            for i in range(len(points)):\n                if i in seen: continue\n                dist = abs(points[pos][1]-points[i][1]) + abs(points[pos][0]-points[i][0])\n                heappush(minheap, (dist, i))\n\n\n        return cost\n\n\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-to-connect-all-points","has_notes":false,"flag_type":1}