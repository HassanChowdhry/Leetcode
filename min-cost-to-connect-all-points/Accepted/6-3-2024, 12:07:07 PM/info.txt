{"id":1276707997,"question_id":1706,"lang":"python3","lang_name":"Python3","time":"1 month, 2 weeks","timestamp":1717441627,"status":10,"status_display":"Accepted","runtime":"2573 ms","url":"/submissions/detail/1276707997/","is_pending":"Not Pending","title":"Min Cost to Connect All Points","memory":"78.4 MB","code":"from collections import defaultdict\nfrom heapq import heapify, heappop, heappush\nclass Solution:\n    def minCostConnectPoints(self, points: List[List[int]]) -> int:\n        seen = set()\n        minheap = []\n        heapify(minheap)\n        curr = 0\n        seen.add(curr)\n\n        for i in range(1, len(points)):\n            dist = abs(points[i][1]-points[curr][1]) + abs(points[i][0]-points[curr][0])\n            heappush(minheap, (dist, i))\n\n\n        total = 0\n        while len(seen) < len(points) or minheap:\n            currdist, curr = heappop(minheap)        \n            if curr in seen: continue\n            seen.add(curr)\n            total += currdist\n\n            for i in range(len(points)):\n                if i in seen: continue\n                dist = abs(points[i][1]-points[curr][1]) + abs(points[i][0]-points[curr][0])\n                heappush(minheap, (dist, i))\n        \n        return total\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-to-connect-all-points","has_notes":false,"flag_type":1}