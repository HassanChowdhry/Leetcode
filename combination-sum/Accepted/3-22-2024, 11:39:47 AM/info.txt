{"id":1211107063,"question_id":39,"lang":"python3","lang_name":"Python3","time":"3Â months, 4Â weeks","timestamp":1711132787,"status":10,"status_display":"Accepted","runtime":"857 ms","url":"/submissions/detail/1211107063/","is_pending":"Not Pending","title":"Combination Sum","memory":"16.6 MB","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        # init variables\n        res = []\n    \n        # inner funct to calc all paths\n        def backtrack(inner):\n            if sum(inner) > target:\n                return\n            if sum(inner) == target:\n                inner.sort()\n                if inner not in res:\n                    res.append(inner)\n                return\n\n            for num in candidates:\n                inner.append(num)\n                backtrack(inner.copy())\n                inner.pop()\n        \n\n        \n        backtrack([])\n        # return\n        return res\n\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}