{"id":774362308,"question_id":908,"lang":"python3","lang_name":"Python3","time":"1 year, 11 months","timestamp":1660575952,"status":10,"status_display":"Accepted","runtime":"55 ms","url":"/submissions/detail/774362308/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"13.9 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        list_size = 0\n        node = head\n        \n        while node:\n            list_size += 1\n            node = node.next\n        middle = (list_size // 2) \n        \n        while head:\n            if middle == 0:\n                return head\n            head = head.next\n            middle -= 1","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}